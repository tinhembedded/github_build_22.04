# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  schedule:
    - cron: '40 20 * * *' # once a day at 20:40 UTC / 12:40 PST
    
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    needs: [build_2]
    if: needs.build.outputs.build-status == 'true'
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          export WLD=$HOME/install   # change this to another location if you prefer
          export LD_LIBRARY_PATH=$WLD/lib
          export PKG_CONFIG_PATH=$WLD/lib/pkgconfig/:$WLD/share/pkgconfig/
          export PATH=$WLD/bin:$PATH
          
          sudo apt install gcc g++ make cmake
    
  build_2:
       runs-on: ubuntu-20.04
       outputs:
          build_2-status: ${{ steps.check.outputs.triggered }}
       steps: 

      # Runs a single command using the runners shell
          - name: Run a one-line script
            run: |
          
              sudo apt install libjpeg-dev libwebp-dev libsystemd-dev libpam-dev libva-dev freerdp2-dev \
                            libunwind-dev libxcb-composite0-dev liblcms2-dev libcolord-dev libgstreamer1.0-dev \
                            libgstreamer-plugins-base1.0-dev libpipewire-0.2-dev libxml2-dev meson
              sudo apt install libxkbcommon-x11-dev libpixman-1-dev libinput-dev libdrm-dev wayland-protocols \
                  libcairo2-dev libpango1.0-dev libdbus-1-dev libgbm-dev libxcursor-dev           
              wget https://github.com/wayland-project/weston/archive/8.0.93.tar.gz
              tar -xf 8.0.93.tar.gz
              cd weston-8.0.93
              meson build/
              sudo ninja -C build/ install

              cd ..
        
  build_3:
       runs-on: ubuntu-20.04
       steps: 

      # Runs a single command using the runners shell
          - name: Run a one-line script
            run: |
                sudo apt install llvm libwayland-egl-backend-dev libxcb-glx0-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-dri3-dev \
                  libxcb-present-dev libxshmfence-dev libgbm-dev libsdl2-dev libgtk-3-dev libgles2-mesa-dev libpixman-1-dev
                 sudo apt install python
                sudo apt install libtool autoconf libdrm-dev libinput-dev libwayland-egl-backend-dev glmark2-es2-wayland 
          
                wget https://archive.mesa3d.org//mesa-18.2.0.tar.xz 
                tar -xf  mesa-18.2.0.tar.xz 
                cd mesa-18.2.0/
                ./configure --prefix=/usr/lib/mesa-virtio
                          --exec_prefix=/usr/lib/mesa-virtio \
                          --libdir=/usr/lib/mesa-virtio \
                          --includedir=/usr/include/mesa-virtio \
                          --sysconfdir=/etc/mesa-virtio \
                          --datadir=/usr/share/mesa-virtio \
                          --with-dri-drivers=swrast \
                          --with-gallium-drivers=swrast,virgl \
                          --enable-dri3=yes \
                          --with-platforms=drm,wayland,x11 \
                          --disable-glx
                make
                sudo make install
                cd 
  build_4:
       runs-on: ubuntu-20.04
       outputs:
          build_2-status: ${{ steps.check.outputs.triggered }}
       steps: 

      # Runs a single command using the runners shell
          - name: Run a one-line script
            run: |
                cd /usr/src
                sudo apt-get install -y build-essential libncurses5-dev gcc libssl-dev grub2 bc bison flex libelf-dev
                sudo wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.8.18.tar.xz 
                ls -la
                ls -l
                which tar
                sudo tar -xf linux-5.8.18.tar.xz
                ls -la
                cd linux-5.8.18
                sudo make oldconfig
                sudo make -j8
                ls -la 
                cd ..
                ls -l
           
